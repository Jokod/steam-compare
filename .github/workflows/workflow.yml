name: Build & Deploy

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build
    runs-on: ubuntu-22.04
    strategy:
          fail-fast: true
          matrix:
            php-version: [8.1]
            node-version: [16]

    steps:
      # —— Setup Github actions 🐙 —————————————————————————————————————————————
      # https://github.com/actions/checkout (official)
      - name: Checkout
        uses: actions/checkout@v2

      # https://github.com/shivammathur/setup-php (community)
      - name: Setup PHP, extensions and composer with shivammathur/setup-php
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, xml, ctype, iconv, intl, pdo, pdo_mysql, dom, filter, gd, iconv, json, mbstring, pdo
        env:
          update: true

      - name: Check PHP Version
        run: php -v

      # —— Composer 🧙‍️ —————————————————————————————————————————————————————————
      - name: Validate composer.json and composer.lock
        run: composer validate

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: make composer-install

      ## —— NPM 🐱 ————————————————————————————————————————————————————————————
      # - name: Checkout
      #   uses: actions/checkout@master

      # - name: Use Node.js ${{ matrix.node-version }}
      #   uses: actions/setup-node@master
      #   with:
      #     node-version: ${{ matrix.node-version }}
      # - name: Upgrade NPM
      #   run: npm install -g npm
      # - name: NPM install build
      #   run: |
      #     npm ci
      #     npm run build --if-present
      #     npm t

      # —— Symfony 🎵 ——————————————————————————————————————————————————————————
#      - name: Check Symfony requirements
#        run: vendor/bin/requirements-checker

      - name: Check the Symfony console
        run: bin/console about

      - name: Check the Symfony console
        run: /usr/bin/php8.1 bin/console about

      ## —— Coding standards ✨ ————————————————————————————————————————————————

      - name: Coding standards checks (php_codesniffer + php-cs-fixer)
        run: /usr/bin/php8.1 ./vendor/bin/php-cs-fixer fix --allow-risky=yes --dry-run

      - name: Static analysis of PHP code (PHPStan)
        run: /usr/bin/php8.1 ./vendor/bin/phpstan analyse src --level=1 --memory-limit 1G

  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-22.04
    strategy:
          fail-fast: true
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Deploy
        uses: SamKirkland/FTP-Deploy-Action@4.0.0
        with:
          server: ${{ secrets.SERVER }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          local-dir: ./
          server-dir: /www/steam/
          exclude: |
            **/.git/**
            **/node_modules/**
            **/var/**

